{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cartItems: [],\n  totalQuantity: 0,\n  totalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    // =========== add item ============\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        // ===== note: if you use just redux you should not mute state array instead of clone the state array, but if you use redux toolkit that will not a problem because redux toolkit clone the array behind the scene\n        state.cartItems.push({\n          id: newItem.id,\n          title: newItem.title,\n          image01: newItem.image01,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = Number(existingItem.totalPrice) + Number(newItem.price);\n      }\n\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n    },\n\n    // ========= remove item ========\n    removeItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.cartItems = state.cartItems.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = Number(existingItem.totalPrice) - Number(existingItem.price);\n      }\n\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n    },\n\n    //============ delete item ===========\n    deleteItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === id);\n\n      if (existingItem) {\n        state.cartItems = state.cartItems.filter(item => item.id !== id);\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\n      }\n\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","initialState","cartItems","totalQuantity","totalAmount","cartSlice","name","reducers","addItem","state","action","newItem","payload","existingItem","find","item","id","push","title","image01","price","quantity","totalPrice","Number","reduce","total","removeItem","filter","deleteItem","cartActions","actions"],"sources":["D:/Food Delivery App/foodapp/src/store/shopping-cart/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  cartItems: [],\r\n  totalQuantity: 0,\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n\r\n  reducers: {\r\n    // =========== add item ============\r\n    addItem(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.cartItems.find(\r\n        (item) => item.id === newItem.id\r\n      );\r\n      state.totalQuantity++;\r\n\r\n      if (!existingItem) {\r\n        // ===== note: if you use just redux you should not mute state array instead of clone the state array, but if you use redux toolkit that will not a problem because redux toolkit clone the array behind the scene\r\n\r\n        state.cartItems.push({\r\n          id: newItem.id,\r\n          title: newItem.title,\r\n          image01: newItem.image01,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice =\r\n          Number(existingItem.totalPrice) + Number(newItem.price);\r\n      }\r\n\r\n      state.totalAmount = state.cartItems.reduce(\r\n        (total, item) => total + Number(item.price) * Number(item.quantity),\r\n\r\n        0\r\n      );\r\n    },\r\n\r\n    // ========= remove item ========\r\n\r\n    removeItem(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.cartItems.find((item) => item.id === id);\r\n      state.totalQuantity--;\r\n\r\n      if (existingItem.quantity === 1) {\r\n        state.cartItems = state.cartItems.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice =\r\n          Number(existingItem.totalPrice) - Number(existingItem.price);\r\n      }\r\n\r\n      state.totalAmount = state.cartItems.reduce(\r\n        (total, item) => total + Number(item.price) * Number(item.quantity),\r\n        0\r\n      );\r\n    },\r\n\r\n    //============ delete item ===========\r\n\r\n    deleteItem(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.cartItems.find((item) => item.id === id);\r\n\r\n      if (existingItem) {\r\n        state.cartItems = state.cartItems.filter((item) => item.id !== id);\r\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\r\n      }\r\n\r\n      state.totalAmount = state.cartItems.reduce(\r\n        (total, item) => total + Number(item.price) * Number(item.quantity),\r\n        0\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;"],"mappings":"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"},"metadata":{},"sourceType":"module"}